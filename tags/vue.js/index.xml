<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Vue.js on almo7aya.md</title><link>/tags/vue.js/</link><description>Recent content in Vue.js on almo7aya.md</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Almo7aya</copyright><lastBuildDate>Fri, 25 Jan 2019 09:00:00 +0000</lastBuildDate><atom:link href="/tags/vue.js/index.xml" rel="self" type="application/rss+xml"/><item><title>Vue„ÅÆNavigation Guards</title><link>/posts/2019-01-19-vue-navigation-guards/</link><pubDate>Fri, 25 Jan 2019 09:00:00 +0000</pubDate><guid>/posts/2019-01-19-vue-navigation-guards/</guid><description>Navigation guards are provided by vue-router. Three ways to hook:
globally per-route in-component NOTE:
Params or query changes won&amp;rsquo;t trigger enter/leave navigation guards. You can either watch the $route object to react to those changes, or use the beforeRouteUpdate in-component guard. Make sure to always call the next function, otherwise the hook will never be resolved. Global 1const router = new VueRouter({ ... }) 2 3// Before Guards 4router.beforeEach((to, from, next) =&amp;gt; { 5 // .</description></item></channel></rss>